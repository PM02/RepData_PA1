b[1:4,1:6]
library(reshape2)
b <- dcast(a, Subject ~ ., mean)
b <- dcast(a, Subject ~ .)
tapply(a$Subject,*,mean)
ddply(a,.(Subject),summarize,mean=mean(count))
library(plyr)
ddply(a,.(Subject),summarize,mean=mean(count))
?mean
ddply(a,.(Subject),summarize,mean=mean(count, na.rm=TRUE))
View(a)
ddply(a,.(Subject),summarize,mean=mean(tBodyAcc.mean.X, na.rm=TRUE))
object.size(a)
print(object.size(a),units="Mb")
?melt
tapply(a[a$Subject,],mean)
b <- group_by(a, Subject)
tapply(a$tBodyAcc.mean.X,a$Subject,mean)
ddply(a,.(Subject),summarize,mean=mean(tBodyAcc.mean.X, na.rm=TRUE))
tapply(a,a$Subject,mean)
tapply(a[,4:48],a$Subject,mean)
a %>% group_by(Subject) %>% summarise_each(funcs(mean))
a %>% group_by(Subject) %>% summarise_each(mean)
a %>% group_by(Subject) %>% summarise_each(funs(mean))
a %.% group_by(Subject) %.% summarise_each(funs(mean))
a %>% group_by(Subject) %>% summarise_each(funs(mean))
mean(a[a$Subject = 1,tBodyAcc.mean.X])
mean(a[a$Subject = 1,"tBodyAcc.mean.X"])
mean(a[a$Subject == 1,"tBodyAcc.mean.X"])
mean(a[a$Subject == 1,"LabelCode"])
mean(a[a$Subject == 10,"LabelCode"])
a %>% group_by(Subject) %>% summarise_each(funs(mean))
c< a %>% group_by(Subject) %>% summarise_each(funs(mean))
c <- a %>% group_by(Subject) %>% summarise_each(funs(mean))
c
b <- a[,-(1,2)]
b <- a[,-c(1,2)]
c <- b %>% group_by(Subject) %>% summarise_each(funs(mean))
c
c <- a %>% group_by(Subject) %>% group_by(LabelName) %>% summarise_each(funs(mean))
c
str(c)
# Read data files
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
# Have total emissions from PM2.5 decreased in the United States from 1999 to
# 2008?
total.emissions <- aggregate(Emissions ~ year, NEI, sum)
png('aplot1.png')
barplot(height=total.emissions$Emissions, names.arg=total.emissions$year,
xlab="years", ylab=expression('total PM'[2]*' emission'),
main=expression('Total PM'[2]*' emissions at various years'))
dev.off()
source('D:/RProjects/ExData 2/plot1.R')
source('D:/RProjects/ExData 2/plot2.R')
source('D:/RProjects/ExData 2/plot2.R')
source('D:/RProjects/ExData 2/plot2.R')
library(ggplot2)
source('D:/RProjects/ExData 2/plot3.R')
source('D:/RProjects/ExData 2/plot3.R')
source('D:/RProjects/ExData 2/plot3.R')
source('D:/RProjects/ExData 2/plot3.R')
source('D:/RProjects/ExData 2/plot3.R')
source('D:/RProjects/ExData 2/plot3.R')
source('D:/RProjects/ExData 2/plot3.R')
source('D:/RProjects/ExData 2/plot3.R')
source('D:/RProjects/ExData 2/plot3.R')
source('D:/RProjects/ExData 2/plot3.R')
source('D:/RProjects/ExData 2/plot4.R')
source('D:/RProjects/ExData 2/plot4.R')
source('D:/RProjects/ExData 2/plot4.R')
source('D:/RProjects/ExData 2/plot4.R')
source('D:/RProjects/ExData 2/plot4.R')
source('D:/RProjects/ExData 2/plot4.R')
is.combustion.coal <- grepl("Fuel Comb.*Coal", SCC$EI.Sector)
combustion.coal.sources <- SCC[is.combustion.coal,]
# Find emissions from coal combustion-related sources
emissions <- NEI[(NEI$SCC %in% combustion.coal.sources$SCC), ]
# group by year
emissions.by.year <- aggregate(Emissions ~ year, data=emissions, FUN=sum)
# plot
library(ggplot2)
png("ExData 2/plot4.png")
ggplot(emissions.by.year, aes(x=factor(year), y=Emissions)) +
geom_bar(stat="identity") +
xlab("year") +
ylab(expression("total PM"[2.5]*" emissions")) +
ggtitle("Emissions from coal combustion-related sources")
dev.off()
source('D:/RProjects/ExData 2/plot4.R')
source('D:/RProjects/ExData 2/plot4.R')
source('~/.active-rstudio-document')
source('D:/RProjects/ExData 2/plot3.R')
source('D:/RProjects/ExData 2/plot3.R')
source('D:/RProjects/ExData 2/plot3.R')
source('D:/RProjects/ExData 2/plot3.R')
source('~/.active-rstudio-document')
source('D:/RProjects/ExData 2/plot5.R')
png("ExData 2/plot5.png")
ggplot(bmore.emissions.aggr, aes(x=factor(year), y=Emissions)) +
geom_bar(stat="identity") +
xlab("Year") + ylab(expression("Total PM"[2.5]*" emissions")) +
ggtitle("Emissions from motor vehicle sources in Baltimore City")
dev.off()
png("ExData 2/plot5.png")
ggplot(bmore.emissions.YT, aes(x=factor(year), y=Emissions)) +
geom_bar(stat="identity") +
xlab("Year") + ylab(expression("Total PM"[2.5]*" emissions")) +
ggtitle("Emissions from motor vehicle sources in Baltimore City")
dev.off()
png("ExData 2/plot5.png")
ggplot(balt.emissions.YT, aes(x=factor(year), y=Emissions)) +
geom_bar(stat="identity") +
xlab("Year") + ylab(expression("Total PM"[2.5]*" emissions")) +
ggtitle("Emissions from motor vehicle sources in Baltimore City")
dev.off()
png("ExData 2/plot51.png")
ggplot(balt.emissions.YT, aes(x=factor(year), y=Emissions)) +
geom_bar(stat="identity") +
xlab("Year") + ylab(expression("Total PM"[2.5]*" emissions")) +
ggtitle("Emissions from motor vehicle sources in Baltimore City")
dev.off()
source('D:/RProjects/ExData 2/plot5.R')
png("ExData 2/plot5.png")
ggplot(balt.emissions.YT, aes(x=factor(year), y=Emissions)) +
geom_bar(stat="identity") +
xlab("Year") + ylab(expression("Total PM"[2.5]*" emissions")) +
ggtitle("Emissions from motor vehicle sources in Baltimore City")
dev.off()
source('D:/RProjects/ExData 2/plot6.R')
png("ExData 2/plot6.png")
ggplot(both.emissions, aes(x=factor(year), y=Emissions, fill=County)) +
geom_bar(stat="identity") +
facet_grid(County  ~ ., scales="free") +
ylab("Total emissions (tons)") +  xlab("Year") +
ggtitle(expression("Motor vehicle emission variation\nin Baltimore and Los Angeles"))
dev.off()
png("ExData 2/plot6.png")
ggplot(both.emissions, aes(x=factor(year), y=Emissions, fill=County)) +
geom_bar(stat="identity") +
facet_grid(County  ~ ., scales="free") +
ylab("Total emissions (tons)") +  xlab("Year") +
ggtitle(expression("Motor vehicle emission variation in Baltimore and Los Angeles"))
dev.off()
png("ExData 2/plot6.png")
ggplot(both.emissions, aes(x=factor(year), y=Emissions, fill=County)) +
geom_bar(stat="identity") +
facet_grid(County  ~ ., scales="free") +
ylab("Total emissions (tons)") +  xlab("Year") +
ggtitle(expression("Motor vehicle emission variation in\nBaltimore and Los Angeles"))
dev.off()
png("ExData 2/plot6.png")
ggplot(both.emissions, aes(x=factor(year), y=Emissions, fill=County)) +
geom_bar(stat="identity") +
facet_grid(County  ~ ., scales="free") +
ylab("Total emissions (tons)") +  xlab("Year") +
ggtitle(expression("Motor vehicle emission variation in Baltimore\nand Los Angeles"))
dev.off()
png("ExData 2/plot62.png")
ggplot(both.emissions, aes(y=factor(year), x=Emissions, fill=County)) +
geom_bar(stat="identity") +
facet_grid(County  ~ ., scales="free") +
ylab("Total emissions (tons)") +  xlab("Year") +
ggtitle(expression("Motor vehicle emission variation in Baltimore\nand Los Angeles"))
dev.off()
a %>% group_by(Subject) %>% summarise_each(funs(mean))
library(dplyr)
a %>% group_by(Subject) %>% summarise_each(funs(mean))
source('D:/RProjects/Sport.R')
library(dplyr)
source('D:/RProjects/Sport.R')
source('D:/RProjects/Sport.R')
source('D:/RProjects/Sport.R')
head(aggregate(finale, by=list(activity = finale$LabelName, subject=finale$Subject), mean))
head(aggregate(finale, by=list(subject=finale$Subject, activity = finale$LabelName), mean))
tidy[1:3.1:8]
source('D:/RProjects/Sport.R')
tidy[1:3.1:8]
head(group_by(tidy,Subject))
source('D:/RProjects/Sport.R')
tidy[1:3.1:8]
tidy[1:3,1:8]
source('D:/RProjects/Sport.R')
clean_tidy[1:3,1:8]
colnames(clean_tidy)
codebook <- colnames(clean_tidy)
colnames(clean_tidy)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","gdata_q4.csv")
a <- read.csv("gdata_q4.csv")
b<-strsplit(names(a),"\\.")
b[[123]]
b[123]
b<-strsplit(names(a),"wgtp")
b[[123]]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","gdata_q42.csv")
a <- read.csv("gdata_q42.csv")
colnames(a)
names(a)
str(a)
a <- read.csv("gdata_q42.csv", skip = 10)
str(a)
a <- read.csv("gdata_q42.csv", skip = 10, header = F)
str(a)
summary(a)
names(a)
a[1:3,1:3]
a[1:3,1:5]
head[a$v5]
head[a$V5]
class[a$V5]
a$V5
str(read.csv)
str(read.table)
a <- read.table("gdata_q42.csv", header = F, sep = ",", strip.white = T, skipNul = T, na.strings = "")
a <- read.table("gdata_q42.csv", header = F, sep = ",", strip.white = T, skipNul = T, na.strings = "", skip = 10)
a <- read.csv("gdata_q42.csv", header = F, strip.white = T, skipNul = T, na.strings = "", skip = 10)
a[1:3,1:5]
class(a$V5)
grep(",","",a$V5)
c<-grep(",","",a$V5)
c<-grep("",",",a$V5)
c
c<-gsub(",","",a$V5)
c
a$V5<-gsub(",","",a$V5)
a$V5<-gsub(".","",a$V5)
a$V5
a$V5 <- c
a$V5
str(gsub)
a$V5<-gsub("\\.","",a$V5)
a$V5
a$V5<-gsub("",NA,a$V5)
a$V5
a$V5 <- c
a$V5<-gsub("\\.","",a$V5)
a$V5
a$V5 <- c
a$V5<-gsub("\\.\\.",NA,a$V5)
a$V5
str(mean)
str(colmeans)
str(colmean)
str(colsmeans)
str(colsmean)
mean(a$V5, na.rm = T)
a$V5 <- as.numeric(a$V5)
a$V5
mean(a$V5, na.rm = T)
library(quantmod)
install.packages(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
a <- read.csv("country.csv")
str(a)
b <- read.csv("gdp.csv")
names(a)
names(b)
str(b)
b <- read.csv("gdp.csv")
names(b)
str(merge)
library(ddplyr)
library(plyr)
library(reshape2)
z <- merge(a,b)
names(z)
sampleTimes
str(grep)
?grep
grep("2012",sampleTimes)
length(grep("2012",sampleTimes))
getwd()
setwd("./repdata/A1")
dir
files.list
files.list()
list.files()
data <- read.csv("activity.csv")
header(data)
head(data)
mean(data$steps, rm.na = T)
data$steps
na.omit(data)
data <- na.omit(data)
mean(data$steps)
colnames(data)
head(data)
tail(data)
data <- read.csv("activity.csv", colClasses = c("numeric", "Date", "numeric"))
head(data)
data <- na.omit(data)
head(data)
class(data$steps)
class(data$date)
class(data$interval)
library(ggplot2)
?aggregate
stepsperday <- aggregate(steps ~ date, without_na, sum)
steps_per_day <- aggregate(steps ~ date, data, sum)
head(steps_per_day)
hist(steps_per_day$steps)
hist(steps_per_day$date ~ steps_per_day$steps)
hist(steps_per_day$steps, breaks = 30)
hist(steps_per_day$steps, breaks = 30, xlab = ""Total number of steps taken per day)
hist(steps_per_day$steps, breaks = 30, xlab = "Total number of steps taken per day")
hist(steps_per_day$steps, breaks = 30, xlab = "Total number of steps taken per day", col = #aa0)
hist(steps_per_day$steps, breaks = 30, xlab = "Total number of steps taken per day", col = "#aa0")
hist(steps_per_day$steps, breaks = 30, xlab = "Total number of steps taken per day", col = "aa0")
?hist
hist(steps_per_day$steps, breaks = 30, xlab = "Total number of steps taken per day", col = "aa0aa0")
hist(steps_per_day$steps, breaks = 30, xlab = "Total number of steps taken per day", col = "000000")
hist(steps_per_day$steps, breaks = 30, xlab = "Total number of steps taken per day", col = "ffffff")
hist(steps_per_day$steps, breaks = 30, xlab = "Total number of steps taken per day", col = "dddddd")
hist(steps_per_day$steps, breaks = 30, xlab = "Total number of steps taken per day", col = "#dddddd")
hist(steps_per_day$steps, breaks = 30, xlab = "Total number of steps taken per day", col = "#ddd")
hist(steps_per_day$steps, breaks = 30, xlab = "Total number of steps taken per day", col = "#dddd00")
hist(steps_per_day$steps, breaks = 30, xlab = "Total number of steps taken per day", col = "#dddd55")
hist(steps_per_day$steps, breaks = 30, xlab = "Total number of steps taken per day", col = "#ddddaa")
hist(steps_per_day$steps, breaks = 30, xlab = "Total number of steps taken per day", col = "#eeeeaa")
hist(steps_per_day$steps, breaks = 10, xlab = "Total number of steps taken per day", col = "#eeeeaa")
hist(steps_per_day$steps, breaks = 40, xlab = "Total number of steps taken per day", col = "#eeeeaa")
hist(steps_per_day$steps, breaks = 10, xlab = "Total number of steps taken per day", col = "#eeeeaa")
hist(steps_per_day$steps, breaks = 20, xlab = "Total number of steps taken per day", col = "#eeeeaa")
hist(steps_per_day$steps, breaks = 20, xlab = "Total number of steps taken per day", col = "#004444")
hist(steps_per_day$steps, breaks = 20, xlab = "Total number of steps taken per day", col = "#008888")
hist(steps_per_day$steps, breaks = 25, xlab = "Total number of steps taken per day", col = "#008888")
hist(steps_per_day$steps,
breaks = 25,
main = "Histogram of total number of steps per day"
xlab = "Number of Steps (for a day)",
col = "#008888")
hist(steps_per_day$steps,
breaks = 25,
main = "Histogram of total number of steps per day"
xlab = "Number of Steps \(for a day\)",
col = "#008888")
hist(steps_per_day$steps,
breaks = 25,
main = "Histogram of total number of steps per day",
xlab = "Number of Steps (for a day)",
col = "#008888")
hist(steps_per_day$steps,
breaks = 25,
main = "Histogram of Total Number of Steps Per Day",
xlab = "Number of steps",
col = "#008888")
hist(steps_per_day$steps,
breaks = 25,
main = "Frequency of Number of Steps Per Day",
xlab = "Number of steps",
col = "#008888")
interval <- aggregate(steps ~ interval, data, mean)
head(interval)
ggplot(interval, aes(x=interval,y=steps)) + geom_line(color="red",size=1) + labs(x="Interval",y="Average Number of Steps") + theme_bw()
ggplot(interval, aes(x=interval,y=steps)) + geom_line(color="#777777") + labs(x="Interval",y="Average Number of Steps") + theme_bw()
ggplot(interval, aes(x=interval,y=steps)) + geom_line(color="#0044aa") + labs(x="Interval",y="Average Number of Steps") + theme_bw()
ggplot(interval, aes(x=interval,y=steps)) + geom_line(color="#0088aa") + labs(x="Interval",y="Average Number of Steps") + theme_bw()
ggplot(interval, aes(x=interval,y=steps)) + geom_line(color="#0088aa") + labs(x="Interval",y="Average Number of Steps")
ggplot(interval, aes(x=interval,y=steps)) + geom_line(color="#0088aa", size = 1) + labs(x="Interval",y="Average Number of Steps")
ggplot(interval, aes(x=interval,y=steps)) + geom_line(color="#0088aa", size = 0.8) + labs(x="Interval",y="Average Number of Steps")
ggplot(interval, aes(x=interval,y=steps)) + geom_line(color="#0088aa", size = 0.5) + labs(x="Interval",y="Average Number of Steps")
ggplot(interval, aes(x=interval,y=steps)) + geom_line(color="#0088aa") + labs(x="Interval",y="Average Number of Steps")
ggplot(interval, aes(x=interval,y=steps))
+ geom_line(color="#0088aa")
+ labs(x="Interval",y="Average Number of Steps")
ggplot(interval, aes(x=interval,y=steps)) + geom_line(color="#0088aa") + labs(x="Interval",y="Average Number of Steps")
interval[interval$mean_steps==max(interval$mean_steps),]
interval[interval$steps==max(interval$mean_steps),]
interval[interval$steps==max(interval$steps),]
interval$interval[interval$steps==max(interval$steps),]
interval[interval$steps==max(interval$steps),interval]
interval[interval$steps==max(interval$steps),]
interval[interval$steps==max(interval$steps),1]
data <- na.omit(all_data)
all_data <- read.csv("activity.csv", colClasses = c("numeric", "Date", "numeric"))
sum(is.na(all_data))
newdata <- merge(alldata, interval, by = 'interval', all.y = F)
newdata <- merge(all_data, interval, by = 'interval', all.y = F)
newdata$steps[is.na(newdata$steps)] <- as.integer(round(newdata$msteps[is.na(newdata$steps)]))
newdata$steps[is.na(newdata$steps)] <- round(newdata$msteps[is.na(newdata$steps)])
newdata$steps[is.na(newdata$steps)] <- round(newdata$steps[is.na(newdata$steps)])
newdata$steps[is.na(newdata$steps)] <- round(newdata$steps[is.na(newdata$steps)])
head(newdata)
newdata <- aggregate(steps ~ interval + day, all_data, mean, na.rm = TRUE)
newdata <- aggregate(steps ~ interval + date, all_data, mean, na.rm = TRUE)
head(newdata)
newdata <- merge(all_data, interval, by = 'interval', all.y = F)
head(newdata$steps[is.na(newdata$steps)])
newdata$steps[is.na(newdata$steps)]
head(newdata$steps)
head(newdata)
newdata$steps.x[is.na(newdata$steps)]
colnames(newdata)
colnames(newdata) <- c("interval", "steps", "date", "meansteps")
colnames(newdata)
newdata$meansteps[is.na(newdata$meansteps)] <- as.integer(round(newdata$meansteps[is.na(newdata$meansteps)]))
head(newdata)
hist(newdata$steps,
breaks = 25,
main = "Frequency of Number of Steps Per Day",
xlab = "Number of steps",
col = "#008888")
hist(newtotal$steps,
breaks = 25,
main = "Frequency of Number of Steps Per Day",
xlab = "Number of steps",
col = "#008888")
head(newtotal)
newtotal <- aggregate(steps ~ date, newdata, sum, na.rm = TRUE)
hist(newdata$steps,
breaks = 25,
main = "Frequency of Number of Steps Per Day",
xlab = "Number of steps",
col = "#008888")
hist(newtotal$steps,
breaks = 25,
main = "Frequency of Number of Steps Per Day",
xlab = "Number of steps",
col = "#008888")
hist(newtotal$steps,
breaks = 25,
main = "Frequency of Number of Steps Per Day",
xlab = "Number of steps",
col = "#880088")
hist(newtotal$steps,
breaks = 20,
main = "Frequency of Number of Steps Per Day",
xlab = "Number of steps",
col = "#880088")
hist(newtotal$steps,
breaks = 20,
main = "Frequency of Number of Steps Per Day",
xlab = "Number of steps",
col = "#cc0088")
weekend <- weekdays(as.Date(newtotal$date)) %in% c("Saturday", "Sunday")
newtotal$daytype <- "weekday"
newtotal$daytype[weekend == TRUE] <- "weekend"
newtotal$daytype <- as.factor(newtotal$daytype)
head(newtotal)
xyplot(
mean_steps ~ interval | daytype,
newtotal,
type = "l",
layout = c(1,2),
main = "Time Series Plot of the 5-Minute Interval\nand the Average Number of Steps Taken,\nAveraged Across All Weekday Days or Weekend Days",
xlab = "5-Minute Interval",
ylab = "Average Number of Steps Taken"
)
library(lattice)
xyplot(
mean_steps ~ interval | daytype,
newinterval,
type = "l",
layout = c(1,2),
main = "Time Series Plot of the 5-Minute Interval\nand the Average Number of Steps Taken,\nAveraged Across All Weekday Days or Weekend Days",
xlab = "5-Minute Interval",
ylab = "Average Number of Steps Taken"
)
xyplot(
mean_steps ~ interval | daytype,
newtotal,
type = "l",
layout = c(1,2),
main = "Time Series Plot of the 5-Minute Interval\nand the Average Number of Steps Taken,\nAveraged Across All Weekday Days or Weekend Days",
xlab = "5-Minute Interval",
ylab = "Average Number of Steps Taken"
)
xyplot(
steps ~ interval | daytype,
newtotal,
type = "l",
layout = c(1,2),
main = "Time Series Plot of the 5-Minute Interval\nand the Average Number of Steps Taken,\nAveraged Across All Weekday Days or Weekend Days",
xlab = "5-Minute Interval",
ylab = "Average Number of Steps Taken"
)
head(newtotal)
timeplot <- aggregate(steps ~ interval + daytype, newtotal, mean)
head(newtotal)
newtotal <- aggregate(steps ~ date, newdata, sum, na.rm = TRUE)
head(newtotal)
timeplot <- aggregate(steps ~ interval + daytype, steps_per_day, mean)
head(steps_per_day)
head(data)
timeplot <- aggregate(steps ~ interval + daytype, data, mean)
weekend <- weekdays(as.Date(data$date)) %in% c("Saturday", "Sunday")
data$daytype <- "weekday"
data$daytype[weekend == TRUE] <- "weekend"
data$daytype <- as.factor(data$daytype)
head(data)
timeplot <- aggregate(steps ~ interval + daytype, data, mean)
xyplot(
steps ~ interval | daytype,
timeplot,
type = "l",
layout = c(1,2),
main = "Time Series Plot of the 5-Minute Interval\nand the Average Number of Steps Taken,\nAveraged Across All Weekday Days or Weekend Days",
xlab = "5-Minute Interval",
ylab = "Average Number of Steps Taken"
)
xyplot(
steps ~ interval | daytype,
timeplot,
type = "l",
layout = c(1,2),
main = "Time Series Plot of the 5-Minute Interval",
xlab = "5-Minute Interval",
ylab = "Average Number of Steps Taken"
)
